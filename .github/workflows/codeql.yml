	name: Secret Scanning with TruffleHog
								
	on:
	  push:
		branches:
		  - master
	  pull_request:
		branches:
		  - master
	 
	permissions:
	  contents: read
	  security-events: write  # ‚úÖ Grant permission to upload SARIF
	 
	jobs:
	  scan-secrets:
		name: Scan for Secrets on Windows
		runs-on: windows-latest  # Windows runner
	 
		steps:
		  - name: Checkout Code
			uses: actions/checkout@v4
	 
		  - name: Install Python and TruffleHog
			run: |
			  # Install Python directly from the official website
			  Invoke-WebRequest -Uri https://www.python.org/ftp/python/3.8.8/python-3.8.8-amd64.exe -OutFile python-installer.exe
			  Start-Process -FilePath python-installer.exe -ArgumentList "/quiet InstallAllUsers=1 PrependPath=1" -Wait
			  python --version
	 
			  # Install TruffleHog
			  pip install --upgrade truffleHog3
	 
		  - name: Run TruffleHog Scan for Secrets
			run: |
			  # Run TruffleHog and output the results in JSON format
			  trufflehog3 ./ --output trufflehog_output.json || Write-Host "Secrets detected, but continuing workflow."
			  exit 0
	 
		  - name: Debug TruffleHog Output
			run: |
			  echo "üîç Checking if TruffleHog found secrets..."
			  Get-Content trufflehog_output.json
	 
		  - name: Check for TruffleHog JSON File
			run: |
			  # Ensure the JSON file is generated
			  if (Test-Path "trufflehog_output.json") {
				echo "‚úÖ JSON report generated successfully."
			  } else {
				echo "‚ùå JSON report NOT found!"
				exit 1
			  }
	 
		  - name: Convert JSON to SARIF
			run: |
			  python -c "
	                  import json
	 
	# Load JSON data
	with open('trufflehog_output.json') as f:
		data = json.load(f)
	 
	# Convert to SARIF format
	sarif_data = {
		'version': '2.1.0',
		'runs': [
			{
				'tool': {
					'driver': {
						'name': 'TruffleHog'
					}
				},
				'results': []
			}
		]
	}
	 
	# Populate SARIF results
	for item in data:
		result = {
			'ruleId': 'SecretFound',
			'level': 'warning',  # Adjust based on severity
			'message': {
				'text': f'Secret found in {item["path"]}'
			},
			'locations': [
				{
					'physicalLocation': {
						'artifactLocation': {
							'uri': item["path"]
						}
					}
				}
			]
		}
		sarif_data['runs'][0]['results'].append(result)
	 
	# Write SARIF data to file
	with open('trufflehog_output.sarif', 'w') as f:
		json.dump(sarif_data, f, indent=2)
	"
		  - name: Verify SARIF File
			run: |
			  # Verify if the SARIF file exists
			  if (Test-Path "trufflehog_output.sarif") {
				echo "‚úÖ SARIF report generated successfully."
				Get-Content trufflehog_output.sarif
			  } else {
				echo "‚ùå SARIF report NOT found!"
				exit 1
			  }
	 
		  - name: Upload SARIF file to GitHub Code Scanning Alerts
			uses: github/codeql-action/upload-sarif@v3
			with:
			  sarif_file: trufflehog_output.sarif
			  token: ${{ secrets.GITHUB_TOKEN }}
			  wait-for-processing: true
	 
		  - name: Debug SARIF File
			run: |
			  echo "üîç Checking SARIF file before upload..."
			  Get-Content trufflehog_output.sarif
