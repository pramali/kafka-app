name: Gitleaks Secret Scanning

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  scan-secrets:
    name: Scan for Secrets with Gitleaks
    runs-on: windows-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Verify Windows Architecture
        run: |
          # Display system architecture for debugging
          systeminfo | findstr /C:"OS Architecture"

      - name: Download and Install Gitleaks
        run: |
          # Set Gitleaks version
          $GITLEAKS_VERSION="8.17.0"
          
          # Download Gitleaks for Windows (64-bit)
          Invoke-WebRequest -Uri "https://github.com/gitleaks/gitleaks/releases/download/v$GITLEAKS_VERSION/gitleaks_$GITLEAKS_VERSION_windows_x64.zip" -OutFile "gitleaks.zip"

          # Extract the zip file
          Expand-Archive -Path "gitleaks.zip" -DestinationPath "." -Force

          # Rename the extracted binary for consistency
          Rename-Item -Path ".\gitleaks.exe" -NewName "gitleaks.exe" -Force

          # Check if the executable exists
          if (!(Test-Path -Path ".\gitleaks.exe")) {
            Write-Error "Gitleaks binary not found after extraction!"
            exit 1
          }

      - name: Verify Gitleaks Installation
        run: |
          # Ensure Gitleaks runs correctly before scanning
          .\gitleaks.exe version

      - name: Run Gitleaks Secret Scan
        run: |
          # Scan the repository for secrets and generate a SARIF report
          .\gitleaks.exe detect --source . --report-format=sarif --report-path=gitleaks.sarif || echo "Gitleaks scan completed with issues"

      - name: Upload SARIF Report to GitHub Security Alerts
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: gitleaks.sarif
