name: Secret Scanning with TruffleHog

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

permissions:
   contents: read
   security-events: write  # ✅ Required for uploading SARIF results

jobs:
  scan-secrets:
    name: Scan for Secrets on Windows
    runs-on: windows-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Install Python and TruffleHog
        run: |
          Invoke-WebRequest -Uri https://www.python.org/ftp/python/3.8.8/python-3.8.8-amd64.exe -OutFile python-installer.exe
          Start-Process -FilePath python-installer.exe -ArgumentList "/quiet InstallAllUsers=1 PrependPath=1" -Wait
          python --version
          pip install --upgrade truffleHog3

      - name: Run TruffleHog Scan for Secrets
        shell: pwsh
        run: |
          # Find all YAML files
          $yaml_files = Get-ChildItem -Path . -Recurse -Include *.yml,*.yaml | Select-Object -ExpandProperty FullName
          
          if ($yaml_files.Count -eq 0) {
              Write-Host "⚠️ No YAML files found to scan."
              exit 0
          }

          # Scan each file using TruffleHog3 and save results to JSON
          $results = @()
          foreach ($file in $yaml_files) {
              Write-Host "🔍 Scanning file: $file"
              $scan_output = trufflehog3 filesystem $file --entropy=False
              if ($scan_output) {
                  $results += "{""file"": ""$file"", ""output"": ""$scan_output""}"
              }
          }

          # Convert results to JSON
          if ($results.Count -gt 0) {
              $json_output = "[" + ($results -join ",") + "]"
              $json_output | Out-File -Encoding utf8 trufflehog_output.json
          } else {
              Write-Host "⚠️ No secrets found in YAML files."
              exit 0
          }

      - name: Validate TruffleHog Output
        shell: pwsh
        run: |
          $output = Get-Content -Path trufflehog_output.json -Raw
          if ($output -match "^\s*\[.*\]\s*$") {
              Write-Host "✅ Secrets detected and JSON output is valid."
          } else {
              Write-Host "❌ Invalid JSON format! TruffleHog output is not in expected format."
              exit 1
          }

      - name: Convert JSON to SARIF
        shell: pwsh
        run: |
          python -c @"
import json

try:
    with open("trufflehog_output.json", "r", encoding='utf-8') as file:
        data = json.load(file)

    if not isinstance(data, list):
        raise ValueError("Unexpected TruffleHog JSON format")

    sarif = {
        "version": "2.1.0",
        "runs": [{
            "tool": {"driver": {"name": "TruffleHog"}},
            "results": [
                {
                    "message": {"text": f"Secret found in {item.get('file', 'unknown file')}"},
                    "locations": [{
                        "physicalLocation": {
                            "artifactLocation": {"uri": item.get("file", "unknown file")}
                        }
                    }]
                }
                for item in data
            ]
        }]
    }

    with open("trufflehog_output.sarif", "w", encoding='utf-8') as sarif_file:
        json.dump(sarif, sarif_file, indent=2, ensure_ascii=False)

    print("✅ SARIF file created successfully!")

except Exception as e:
    print(f"❌ Error converting to SARIF: {e}")
    exit(1)
"@ > convert_to_sarif.py
          python convert_to_sarif.py

      - name: Upload SARIF file to GitHub Code Scanning Alerts
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: trufflehog_output.sarif
          token: ${{ secrets.GITHUB_TOKEN }}
          wait-for-processing: true
