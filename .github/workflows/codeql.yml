name: Secret Scanning with TruffleHog

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

permissions:  
  contents: read  
  security-events: write  # ‚úÖ Required for uploading SARIF  

jobs:
  scan-secrets:
    name: Scan for Secrets on Windows
    runs-on: windows-latest  # Windows runner

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Install Python and TruffleHog
        shell: pwsh
        run: |
          Invoke-WebRequest -Uri https://www.python.org/ftp/python/3.8.8/python-3.8.8-amd64.exe -OutFile python-installer.exe
          Start-Process -FilePath python-installer.exe -ArgumentList "/quiet InstallAllUsers=1 PrependPath=1" -Wait
          python --version
          pip install --upgrade truffleHog3

      - name: Run TruffleHog Scan for Secrets
        shell: pwsh
        run: |
             # Run TruffleHog and ensure JSON output
             trufflehog3 filesystem . --format json > trufflehog_output.json 2>&1
    
             # Debug: Print the output file
             Write-Host "üîç Checking TruffleHog output..."
             Get-Content trufflehog_output.json

             # Validate JSON output
             $output = Get-Content -Path trufflehog_output.json -Raw
             exit 0      

      - name: Debug TruffleHog Output
        shell: pwsh
        run: |
          if (!(Test-Path "trufflehog_output.json")) {
            Write-Host "‚ùå trufflehog_output.json NOT found!"
            exit 1
          }

          $content = Get-Content -Path trufflehog_output.json -Raw
          if ($content -eq "" -or $content -eq "[]" -or $null -eq $content) {
            Write-Host "‚ö†Ô∏è No secrets found. Skipping SARIF generation."
            exit 0
          }

          try {
            $parsed = $content | ConvertFrom-Json
            Write-Host "‚úÖ Valid JSON detected."
          } catch {
            Write-Host "‚ùå Invalid JSON format!"
            Write-Host "üîç Debugging Output: $content"
            exit 1
          }

      - name: Convert TruffleHog JSON to SARIF
        shell: pwsh
        run: |
          $content = @'
          import json
          import sys
          import os

          try:
              sys.stdout.reconfigure(encoding='utf-8')

              input_file = "trufflehog_output.json"
              output_file = "trufflehog_output.sarif"

              if not os.path.exists(input_file):
                  raise FileNotFoundError("‚ùå Input file not found!")

              with open(input_file, "r", encoding="utf-8") as file:
                  raw_content = file.read().strip()

              if not raw_content or raw_content == "[]":
                  print("‚ö†Ô∏è No valid findings in TruffleHog output. Skipping SARIF generation.")
                  sys.exit(0)

              try:
                  data = json.loads(raw_content)
              except json.JSONDecodeError as e:
                  print(f"‚ùå Invalid JSON format: {e}")
                  sys.exit(1)

              if not isinstance(data, list) or len(data) == 0:
                  print("‚ö†Ô∏è No secrets found. Skipping SARIF generation.")
                  sys.exit(0)

              sarif = {
                  "version": "2.1.0",
                  "runs": [{
                      "tool": {"driver": {"name": "TruffleHog"}},
                      "results": [
                          {
                              "message": {"text": f"Secret found in {item.get('path', 'unknown file')}"},
                              "locations": [{

                                  "physicalLocation": {
                                      "artifactLocation": {"uri": item.get("path", "unknown file")},
                                      "region": {
                                          "startLine": int(item.get("line", 1)),  # ‚úÖ Ensure integer value
                                          "endLine": int(item.get("line", 1)),    # ‚úÖ Ensure integer value
                                          "startColumn": 1,
                                          "endColumn": 1
                                      }
                                  }
                              }]
                          } for item in data if "path" in item
                      ]
                  }]
              }

              with open(output_file, "w", encoding="utf-8") as sf:
                  json.dump(sarif, sf, indent=2, ensure_ascii=False)

              print(f"‚úÖ SARIF file '{output_file}' created successfully!")

          except Exception as e:
              print(f"‚ùå Error converting to SARIF: {e}")
              exit(1)
          '@

          Set-Content -Path convert_to_sarif.py -Value $content -Encoding UTF8
          python convert_to_sarif.py

      - name: Debug SARIF Output
        shell: pwsh
        run: |
          if (Test-Path "trufflehog_output.sarif") {
            Write-Host "‚úÖ SARIF file generated successfully!"
            Get-Content trufflehog_output.sarif
          } else {
            Write-Host "‚ö†Ô∏è No SARIF file generated, skipping upload."
            exit 0  # Do not fail if no secrets were found
          }

      - name: Upload SARIF file to GitHub Code Scanning Alerts
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: trufflehog_output.sarif
          wait-for-processing: true

      - name: Send Email Alert if Secrets Found
       #if: failure()
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 587
          username: ${{ secrets.EMAIL_USERNAME }}
          password: ${{ secrets.EMAIL_PASSWORD }}
          #connection_url: ${{ secrets.MAIL_CONNECTION }}
          subject: "üö® Secret Detected in GitHub Repo!"
          to: pramod.mali44@gmail.com,sindhuguduru585@gmail.com
          from: pramod.mali44@gmail.com
          body: "A secret was detected in the repository ${{ github.repository }}. Please investigate immediately."
     
