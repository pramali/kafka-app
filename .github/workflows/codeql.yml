name: Secret Scanning with Gitleaks on Windows

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  scan-secrets:
    name: Scan for Secrets with Gitleaks on Windows
    runs-on: windows-latest  # Windows runner

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Verify Architecture and Download Gitleaks for Windows
        run: |
          # Verify the system architecture
          systeminfo | findstr /C:"OS Architecture"

          # Download the correct Gitleaks binary (64-bit version)
          curl -L -o gitleaks.exe "https://github.com/gitleaks/gitleaks/releases/download/v8.6.0/gitleaks-windows-amd64.exe"
          
          # Verify the file was downloaded
          if (!(Test-Path -Path ".\gitleaks.exe")) {
            Write-Error "Gitleaks download failed"
            exit 1
          }

      - name: Debug Gitleaks Installation
        run: |
          # Show contents of the current directory to verify gitleaks.exe is here
          dir

          # Attempt to execute Gitleaks with --version flag for debugging
          try {
            .\gitleaks.exe --version
          } catch {
            Write-Error "Failed to run gitleaks.exe: $_"
            exit 1
          }

      - name: Run Gitleaks Secret Scan
        run: |
          # Run the Gitleaks scan and output to SARIF format
          .\gitleaks.exe detect --report-format=sarif --report-path=gitleaks.sarif || echo "Gitleaks scan completed with issues"

      - name: Upload SARIF Report to GitHub Security Alerts
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: gitleaks.sarif
