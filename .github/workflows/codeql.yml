name: Gitleaks Secret Scanning

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  scan-secrets:
    name: Scan for Secrets with Gitleaks
    runs-on: windows-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Install Gitleaks using Chocolatey
        run: |
          # Ensure Chocolatey is installed
          Set-ExecutionPolicy Bypass -Scope Process -Force
          [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072
          Invoke-Expression ((New-Object System.Net.WebClient).DownloadString('https://community.chocolatey.org/install.ps1'))

          # Install Gitleaks
          choco install gitleaks -y --no-progress

      - name: Verify Gitleaks Installation
        run: |
          # Ensure Gitleaks is installed correctly
          gitleaks version

      - name: Run Gitleaks Secret Scan
        run: |
          # Scan the repository for secrets and generate a SARIF report
          gitleaks detect --source . --report-format=sarif --report-path=gitleaks.sarif || echo "Gitleaks scan completed with issues"

      - name: Upload SARIF Report to GitHub Security Alerts
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: gitleaks.sarif
