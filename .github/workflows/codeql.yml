name: Secret Scanning with TruffleHog

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  scan-secrets:
    name: Scan for Secrets on Windows
    runs-on: windows-latest  # Windows runner

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Install Python and TruffleHog
        run: |
          # Install Python directly from the official website
          Invoke-WebRequest -Uri https://www.python.org/ftp/python/3.8.8/python-3.8.8-amd64.exe -OutFile python-installer.exe
          Start-Process -FilePath python-installer.exe -ArgumentList "/quiet InstallAllUsers=1 PrependPath=1" -Wait
          python --version

          # Install TruffleHog
          #pip install truffleHog3
          #pip install truffleHog3 --verbose
          pip install  --upgrade truffleHog3

      - name: Run TruffleHog Scan for Secrets
        run: |
          # Scan the repository for secrets like API keys, passwords, tokens, etc.
          trufflehog3 ./ || Write-Host "Secrets detected, but continuing workflow."
          exit 0
         

      # Step 1: Run TruffleHog and generate the JSON output
      - name: Run TruffleHog and generate JSON output
        shell: pwsh
        run: |
          # Run TruffleHog and save JSON output
          trufflehog filesystem . --json | Out-File -Encoding utf8 trufflehog_output.json
          echo "TruffleHog output generated successfully."

          # Step 2: Debug SARIF report
      - name: Debug SARIF Report for TruffleHog
        shell: pwsh
        run: |
         if (Test-Path "trufflehog_output.json") {
         echo "JSON output generated successfully:"
         Get-Content trufflehog_output.json
         } else {
         echo "❌ JSON output NOT found!"
         exit 1
         }

         # Convert JSON to SARIF
         python -c "
         import json
         sarif = {
        'version': '2.1.0',
        'runs': [{
            'tool': {'driver': {'name': 'TruffleHog'}},
            'results': [
                {'message': {'text': f'Potential secret: {issue}'}}
                for issue in json.load(open('trufflehog_output.json', encoding='utf-8'))
            ]
        }]
    }
    json.dump(sarif, open('trufflehog_output.sarif', 'w', encoding='utf-8'))
    "
    echo "SARIF report generated successfully."

# Step 3: Upload SARIF report to GitHub Security Alerts
- name: Upload SARIF file to GitHub Code Scanning Alerts
  uses: github/codeql-action/upload-sarif@v3
  with:
    sarif_file: trufflehog_output.sarif
    wait-for-processing: true
  env:
    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # ✅ Ensure token is available

     
